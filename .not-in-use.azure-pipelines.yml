# Node.js with webpack
# Build a Node.js project using the webpack CLI.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: IoT-Platform-Storybook

stages:
  - stage: Artifact
    displayName: Pushing to the artifactory
    jobs:
      - job: build
        displayName: npm install and build
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '12.x'
            displayName: 'Install Node.js'
          - script: |
              npm install
              npm run build
            displayName: 'npm install, npm build'
          - task: CopyFiles@2
            inputs:
              Contents: 'dist/**' # Pull the build directory (React)
              TargetFolder: '$(Build.ArtifactStagingDirectory)'
          - task: PublishBuildArtifacts@1
            inputs:
              pathtoPublish: $(Build.ArtifactStagingDirectory) # dist or build files
              ArtifactName: 'www' # output artifact named www
          - task: Npm@1
            inputs:
              command: publish
              publishRegistry: useFeed
              publishFeed: 2d9b7d6e-92c0-428a-b15f-f4d45db42f9e/Denim

  - stage : storybook
    displayName: Deploying Storybook
    jobs:
      - job: getVersionNumber
        displayName: get version number
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - bash: |
              set -e
              VERSION=$(jq '.version' < package.json | sed 's/"//g')
              echo "##vso[task.setvariable variable=version;isOutput=true]$VERSION"
            name: getVersionNumber
      - job: Build
        displayName: Build
        dependsOn: getVersionNumber
        pool:
          vmImage: "ubuntu-latest"
        variables:
          versionNumber: $[ dependencies.getVersionNumber.outputs['getVersionNumber.version'] ]
        steps:
          - task: Npm@1
            inputs:
              customEndpoint: Azure artifacts NPM
          - bash: |
              set -e
              npm install
              npm run build-storybook
            name: buildImage
          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: "$(Build.SourcesDirectory)/Dockerfile"
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(versionNumber)
      - job: Tag
        displayName: Git tag version number
        dependsOn: getVersionNumber
        pool:
          vmImage: "ubuntu-latest"
        variables:
          versionNumber: $[ dependencies.getVersionNumber.outputs['getVersionNumber.version'] ]
        steps:
          - checkout: self
            persistCredentials: true
          - bash: |
              set -e
              git config --global user.name "BuildService"
              git config --global user.email "BuildService@houston-inc.com"
              git tag -a $(versionNumber) -m "new version $(versionNumber)" -f
              git tag
              git push origin $(versionNumber) -f
            name: gitTagVersion
