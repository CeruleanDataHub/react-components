name: storybook

on:
  push:
    branches: [gh-action]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      -
        name: Version
        id: Version
        run: |
          set -e
          export VERSION=$(jq '.version' < package.json | sed 's/"//g')
          echo "::set-env name=VERSION::$VERSION"
      -
        name: Install
        id: Install
        run: |
          npm install
      -
        name: Eslint
        id: Eslint
        run: |
          npm run lint
      -
        name: Test
        id: Test
        run: |
          npm test
      -
        name: Build
        id: Build
        run: |
          set -e
          echo $VERSION
          npm run build-storybook
      -
        name: Prepare
        id: Prepare
        run: |
          DOCKER_IMAGE=ceruleandatahub/component-storybook
          DOCKER_PLATFORMS=linux/amd64

          TAGS="--tag ${DOCKER_IMAGE}:${VERSION}"

          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=build_args::--platform ${DOCKER_PLATFORMS} \
            --build-arg VERSION=${VERSION} \
            --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            --build-arg VCS_REF=${GITHUB_SHA::8} \
            ${TAGS} --file Dockerfile .
      -
        name: Docker Login
        if: success()
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USERNAME}" --password-stdin
      -
        name: Docker Build
        run: |
          docker  build --output "type=image,push=true" ${{ steps.prepare.outputs.build_args }}
