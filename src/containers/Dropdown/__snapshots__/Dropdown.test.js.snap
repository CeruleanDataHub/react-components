// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dropdown renders 1`] = `
<ForwardRef
  isOpen={false}
  label=""
  onClick={[MockFunction]}
>
  <Typography
    color=""
    fontFamily="openSans"
    size="normal"
  >
    <styled.div
      fontFamily="openSans"
      size="normal"
      textColor=""
    >
      <div
        className="sc-AxhUy iumSJR"
        fontFamily="openSans"
        size="normal"
      >
        <styled.div>
          <div
            className="sc-AxgMl ecWowd"
          >
            <ForwardRef
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "baseHash": 1882630949,
                    "componentId": "sc-AxheI",
                    "isStatic": false,
                    "rules": Array [
                      "
  font-family: inherit;
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  height: 40px;
  border: 1px solid ",
                      [Function],
                      ";
  background: ",
                      [Function],
                      ";
  border-radius: 4px;
  padding: 1.25em;
  cursor: pointer;
",
                    ],
                    "staticRulesId": "",
                  },
                  "displayName": "styled.button",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "shouldForwardProp": undefined,
                  "styledComponentId": "sc-AxheI",
                  "target": "button",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              className=""
              color=""
              data-button-test={true}
              icon=""
              onClick={[MockFunction]}
              type="button"
            >
              <styled.button
                as={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "baseHash": 1882630949,
                      "componentId": "sc-AxheI",
                      "isStatic": false,
                      "rules": Array [
                        "
  font-family: inherit;
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  height: 40px;
  border: 1px solid ",
                        [Function],
                        ";
  background: ",
                        [Function],
                        ";
  border-radius: 4px;
  padding: 1.25em;
  cursor: pointer;
",
                      ],
                      "staticRulesId": "",
                    },
                    "displayName": "styled.button",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "shouldForwardProp": undefined,
                    "styledComponentId": "sc-AxheI",
                    "target": "button",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                className=""
                color=""
                data-button-test={true}
                onClick={[MockFunction]}
                type="button"
              >
                <styled.button
                  className="sc-AxiKw Rtuhc"
                  color=""
                  data-button-test={true}
                  onClick={[MockFunction]}
                  type="button"
                >
                  <button
                    className="sc-AxheI jgVLYo sc-AxiKw Rtuhc"
                    color=""
                    data-button-test={true}
                    onClick={[MockFunction]}
                    type="button"
                  >
                    <Styled(styled.span)>
                      <span
                        className="sc-AxmLO sc-fzozJi fSPnmq"
                      />
                    </Styled(styled.span)>
                    <Icon
                      as={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "baseHash": -1923298833,
                            "componentId": "sc-AxmLO",
                            "isStatic": false,
                            "rules": Array [
                              "
  color: #999;
  font-size: 1.25em;
  font-weight: bold;
",
                            ],
                            "staticRulesId": "",
                          },
                          "displayName": "styled.span",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "shouldForwardProp": undefined,
                          "styledComponentId": "sc-AxmLO",
                          "target": "span",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      className=""
                      customIcon={null}
                      name="chevron-down"
                    >
                      <styled.span
                        as={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "baseHash": -1923298833,
                              "componentId": "sc-AxmLO",
                              "isStatic": false,
                              "rules": Array [
                                "
  color: #999;
  font-size: 1.25em;
  font-weight: bold;
",
                              ],
                              "staticRulesId": "",
                            },
                            "displayName": "styled.span",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "shouldForwardProp": undefined,
                            "styledComponentId": "sc-AxmLO",
                            "target": "span",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        className={
                          Array [
                            "",
                            "lni",
                            "lni-chevron-down",
                          ]
                        }
                      >
                        <styled.span
                          className="sc-AxjAm jWlVxK lni lni-chevron-down"
                        >
                          <span
                            className="sc-AxmLO RLGYb sc-AxjAm jWlVxK lni lni-chevron-down"
                          />
                        </styled.span>
                      </styled.span>
                    </Icon>
                  </button>
                </styled.button>
              </styled.button>
            </ForwardRef>
          </div>
        </styled.div>
      </div>
    </styled.div>
  </Typography>
</ForwardRef>
`;
