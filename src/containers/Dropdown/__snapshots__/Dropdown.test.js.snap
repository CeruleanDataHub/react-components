// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dropdown should render dropdown 1`] = `
<styled.div>
  <styled.button
    onClick={[Function]}
  >
    <styled.span />
    <Icon
      as={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "baseHash": -2021127760,
            "componentId": "sc-fzoLsD",
            "isStatic": false,
            "rules": Array [
              "
  color: ",
              [Function],
              ";
  font-size: 1.25em;
  font-weight: bold;
",
            ],
            "staticRulesId": "",
          },
          "displayName": "styled.span",
          "foldedComponentIds": Array [],
          "render": [Function],
          "shouldForwardProp": undefined,
          "styledComponentId": "sc-fzoLsD",
          "target": "span",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      name="chevron-down"
    />
  </styled.button>
</styled.div>
`;

exports[`Dropdown should render dropdown with items and clicked open 1`] = `
<styled.div>
  <styled.button
    onClick={[Function]}
  >
    <styled.span />
    <styled.span
      color="#90ee7e"
    >
      0 selected
    </styled.span>
    <Icon
      as={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "baseHash": -2021127760,
            "componentId": "sc-fzoLsD",
            "isStatic": false,
            "rules": Array [
              "
  color: ",
              [Function],
              ";
  font-size: 1.25em;
  font-weight: bold;
",
            ],
            "staticRulesId": "",
          },
          "displayName": "styled.span",
          "foldedComponentIds": Array [],
          "render": [Function],
          "shouldForwardProp": undefined,
          "styledComponentId": "sc-fzoLsD",
          "target": "span",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      name="chevron-up"
    />
  </styled.button>
  <styled.ul>
    <styled.li
      key="Item 1"
    >
      <Checkbox
        checked={false}
        className=""
        label="Item 1"
        onChange={[Function]}
        value="1"
      />
    </styled.li>
    <styled.li
      key="Item 2"
    >
      <Checkbox
        checked={false}
        className=""
        label="Item 2"
        onChange={[Function]}
        value="2"
      />
    </styled.li>
  </styled.ul>
</styled.div>
`;
