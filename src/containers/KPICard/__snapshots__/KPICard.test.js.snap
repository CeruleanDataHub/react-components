// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`KPICard given different currency, renders 1`] = `
<KPICard
  backgroundColor={null}
  currency="USD"
  dataFormat="decimal"
  greenValue={false}
  growth={0}
  icon={null}
  redValue={false}
  showPercentage={true}
  title=""
  value={0}
>
  <styled.div
    backgroundColor={null}
  >
    <div
      className="sc-AxhCb icHyzh"
    >
      <Typography
        color="gray"
        fontFamily={null}
        size="normal"
      >
        <styled.div
          fontFamily={null}
          size="normal"
          textColor="gray"
        >
          <div
            className="sc-AxiKw cVwRNp"
            fontFamily={null}
            size="normal"
          />
        </styled.div>
      </Typography>
      <Grid
        as={null}
        className=""
        columns=""
      >
        <Grid__Grid
          as={null}
          className=""
          columns={2}
        >
          <div
            className="Grid__Grid-gDLjRO jcWKgV"
          >
            <Cell__Cell
              data-cell-test={true}
              middle={true}
            >
              <div
                className="Cell__Cell-tAjrW cZXUpN"
                data-cell-test={true}
              >
                <Typography
                  color={null}
                  fontFamily={null}
                  size="large"
                >
                  <styled.div
                    fontFamily={null}
                    size="large"
                    textColor={null}
                  >
                    <div
                      className="sc-AxiKw csZtRK"
                      fontFamily={null}
                      size="large"
                    >
                      0
                    </div>
                  </styled.div>
                </Typography>
              </div>
            </Cell__Cell>
            <Cell__Cell
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "baseHash": 2075994405,
                    "componentId": "sc-AxhUy",
                    "isStatic": false,
                    "rules": Array [
                      "
  justify-content: flex-end;
  display: inline-flex;
  flex-direction: column;
",
                    ],
                    "staticRulesId": "",
                  },
                  "displayName": "styled.span",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "shouldForwardProp": undefined,
                  "styledComponentId": "sc-AxhUy",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              center={true}
            >
              <styled.span
                center={true}
                className="Cell__Cell-tAjrW hmKLft"
              >
                <span
                  className="sc-AxhUy mCTBF Cell__Cell-tAjrW hmKLft"
                >
                  <styled.span
                    data-flex-row-test={true}
                  >
                    <span
                      className="sc-AxgMl ouThN"
                      data-flex-row-test={true}
                    >
                      <Typography
                        color="blue"
                        fontFamily={null}
                        size="normal"
                      >
                        <styled.div
                          fontFamily={null}
                          size="normal"
                          textColor="blue"
                        >
                          <div
                            className="sc-AxiKw hcUJAt"
                            fontFamily={null}
                            size="normal"
                          >
                            0%
                            <Icon
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "baseHash": 1882630949,
                                    "componentId": "sc-AxheI",
                                    "isStatic": false,
                                    "rules": Array [
                                      "
  font-size: 1rem;
  margin-left: 0.3rem;
",
                                    ],
                                    "staticRulesId": "",
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "shouldForwardProp": undefined,
                                  "styledComponentId": "sc-AxheI",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              className=""
                              customIcon={null}
                              name="minus"
                            >
                              <styled.span
                                as={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "baseHash": 1882630949,
                                      "componentId": "sc-AxheI",
                                      "isStatic": false,
                                      "rules": Array [
                                        "
  font-size: 1rem;
  margin-left: 0.3rem;
",
                                      ],
                                      "staticRulesId": "",
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "shouldForwardProp": undefined,
                                    "styledComponentId": "sc-AxheI",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                className={
                                  Array [
                                    "",
                                    "lni",
                                    "lni-minus",
                                  ]
                                }
                              >
                                <styled.div
                                  className="sc-AxjAm jWlVxK lni lni-minus"
                                >
                                  <div
                                    className="sc-AxheI brJAFe sc-AxjAm jWlVxK lni lni-minus"
                                  />
                                </styled.div>
                              </styled.span>
                            </Icon>
                          </div>
                        </styled.div>
                      </Typography>
                    </span>
                  </styled.span>
                </span>
              </styled.span>
            </Cell__Cell>
          </div>
        </Grid__Grid>
      </Grid>
    </div>
  </styled.div>
</KPICard>
`;

exports[`KPICard given different props, renders 1`] = `
<KPICard
  backgroundColor={null}
  currency={null}
  dataFormat="decimal"
  greenValue={false}
  growth={42}
  icon={null}
  redValue={true}
  showPercentage={true}
  title="Some other title"
  value={0}
>
  <styled.div
    backgroundColor={null}
  >
    <div
      className="sc-AxhCb icHyzh"
    >
      <Typography
        color="gray"
        fontFamily={null}
        size="normal"
      >
        <styled.div
          fontFamily={null}
          size="normal"
          textColor="gray"
        >
          <div
            className="sc-AxiKw cVwRNp"
            fontFamily={null}
            size="normal"
          >
            Some other title
          </div>
        </styled.div>
      </Typography>
      <Grid
        as={null}
        className=""
        columns=""
      >
        <Grid__Grid
          as={null}
          className=""
          columns={2}
        >
          <div
            className="Grid__Grid-gDLjRO jcWKgV"
          >
            <Cell__Cell
              data-cell-test={true}
              middle={true}
            >
              <div
                className="Cell__Cell-tAjrW cZXUpN"
                data-cell-test={true}
              >
                <Typography
                  color="red"
                  fontFamily={null}
                  size="large"
                >
                  <styled.div
                    fontFamily={null}
                    size="large"
                    textColor="red"
                  >
                    <div
                      className="sc-AxiKw fyALvw"
                      fontFamily={null}
                      size="large"
                    >
                      0
                    </div>
                  </styled.div>
                </Typography>
              </div>
            </Cell__Cell>
            <Cell__Cell
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "baseHash": 2075994405,
                    "componentId": "sc-AxhUy",
                    "isStatic": false,
                    "rules": Array [
                      "
  justify-content: flex-end;
  display: inline-flex;
  flex-direction: column;
",
                    ],
                    "staticRulesId": "",
                  },
                  "displayName": "styled.span",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "shouldForwardProp": undefined,
                  "styledComponentId": "sc-AxhUy",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              center={true}
            >
              <styled.span
                center={true}
                className="Cell__Cell-tAjrW hmKLft"
              >
                <span
                  className="sc-AxhUy mCTBF Cell__Cell-tAjrW hmKLft"
                >
                  <styled.span
                    data-flex-row-test={true}
                  >
                    <span
                      className="sc-AxgMl ouThN"
                      data-flex-row-test={true}
                    >
                      <Typography
                        color="green"
                        fontFamily={null}
                        size="normal"
                      >
                        <styled.div
                          fontFamily={null}
                          size="normal"
                          textColor="green"
                        >
                          <div
                            className="sc-AxiKw byKwOq"
                            fontFamily={null}
                            size="normal"
                          >
                            +
                            4,200%
                            <Icon
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "baseHash": 1882630949,
                                    "componentId": "sc-AxheI",
                                    "isStatic": false,
                                    "rules": Array [
                                      "
  font-size: 1rem;
  margin-left: 0.3rem;
",
                                    ],
                                    "staticRulesId": "",
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "shouldForwardProp": undefined,
                                  "styledComponentId": "sc-AxheI",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              className=""
                              customIcon={null}
                              name="chevron-up"
                            >
                              <styled.span
                                as={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "baseHash": 1882630949,
                                      "componentId": "sc-AxheI",
                                      "isStatic": false,
                                      "rules": Array [
                                        "
  font-size: 1rem;
  margin-left: 0.3rem;
",
                                      ],
                                      "staticRulesId": "",
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "shouldForwardProp": undefined,
                                    "styledComponentId": "sc-AxheI",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                className={
                                  Array [
                                    "",
                                    "lni",
                                    "lni-chevron-up",
                                  ]
                                }
                              >
                                <styled.div
                                  className="sc-AxjAm jWlVxK lni lni-chevron-up"
                                >
                                  <div
                                    className="sc-AxheI brJAFe sc-AxjAm jWlVxK lni lni-chevron-up"
                                  />
                                </styled.div>
                              </styled.span>
                            </Icon>
                          </div>
                        </styled.div>
                      </Typography>
                    </span>
                  </styled.span>
                </span>
              </styled.span>
            </Cell__Cell>
          </div>
        </Grid__Grid>
      </Grid>
    </div>
  </styled.div>
</KPICard>
`;

exports[`KPICard given negative growth, renders 1`] = `
<KPICard
  backgroundColor={null}
  currency={null}
  dataFormat="decimal"
  greenValue={false}
  growth={-42}
  icon={null}
  redValue={false}
  showPercentage={true}
  title=""
  value={0}
>
  <styled.div
    backgroundColor={null}
  >
    <div
      className="sc-AxhCb icHyzh"
    >
      <Typography
        color="gray"
        fontFamily={null}
        size="normal"
      >
        <styled.div
          fontFamily={null}
          size="normal"
          textColor="gray"
        >
          <div
            className="sc-AxiKw cVwRNp"
            fontFamily={null}
            size="normal"
          />
        </styled.div>
      </Typography>
      <Grid
        as={null}
        className=""
        columns=""
      >
        <Grid__Grid
          as={null}
          className=""
          columns={2}
        >
          <div
            className="Grid__Grid-gDLjRO jcWKgV"
          >
            <Cell__Cell
              data-cell-test={true}
              middle={true}
            >
              <div
                className="Cell__Cell-tAjrW cZXUpN"
                data-cell-test={true}
              >
                <Typography
                  color={null}
                  fontFamily={null}
                  size="large"
                >
                  <styled.div
                    fontFamily={null}
                    size="large"
                    textColor={null}
                  >
                    <div
                      className="sc-AxiKw csZtRK"
                      fontFamily={null}
                      size="large"
                    >
                      0
                    </div>
                  </styled.div>
                </Typography>
              </div>
            </Cell__Cell>
            <Cell__Cell
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "baseHash": 2075994405,
                    "componentId": "sc-AxhUy",
                    "isStatic": false,
                    "rules": Array [
                      "
  justify-content: flex-end;
  display: inline-flex;
  flex-direction: column;
",
                    ],
                    "staticRulesId": "",
                  },
                  "displayName": "styled.span",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "shouldForwardProp": undefined,
                  "styledComponentId": "sc-AxhUy",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              center={true}
            >
              <styled.span
                center={true}
                className="Cell__Cell-tAjrW hmKLft"
              >
                <span
                  className="sc-AxhUy mCTBF Cell__Cell-tAjrW hmKLft"
                >
                  <styled.span
                    data-flex-row-test={true}
                  >
                    <span
                      className="sc-AxgMl ouThN"
                      data-flex-row-test={true}
                    >
                      <Typography
                        color="red"
                        fontFamily={null}
                        size="normal"
                      >
                        <styled.div
                          fontFamily={null}
                          size="normal"
                          textColor="red"
                        >
                          <div
                            className="sc-AxiKw ethOCB"
                            fontFamily={null}
                            size="normal"
                          >
                            -4,200%
                            <Icon
                              as={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "baseHash": 1882630949,
                                    "componentId": "sc-AxheI",
                                    "isStatic": false,
                                    "rules": Array [
                                      "
  font-size: 1rem;
  margin-left: 0.3rem;
",
                                    ],
                                    "staticRulesId": "",
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "shouldForwardProp": undefined,
                                  "styledComponentId": "sc-AxheI",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              className=""
                              customIcon={null}
                              name="chevron-down"
                            >
                              <styled.span
                                as={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "baseHash": 1882630949,
                                      "componentId": "sc-AxheI",
                                      "isStatic": false,
                                      "rules": Array [
                                        "
  font-size: 1rem;
  margin-left: 0.3rem;
",
                                      ],
                                      "staticRulesId": "",
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "shouldForwardProp": undefined,
                                    "styledComponentId": "sc-AxheI",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                className={
                                  Array [
                                    "",
                                    "lni",
                                    "lni-chevron-down",
                                  ]
                                }
                              >
                                <styled.div
                                  className="sc-AxjAm jWlVxK lni lni-chevron-down"
                                >
                                  <div
                                    className="sc-AxheI brJAFe sc-AxjAm jWlVxK lni lni-chevron-down"
                                  />
                                </styled.div>
                              </styled.span>
                            </Icon>
                          </div>
                        </styled.div>
                      </Typography>
                    </span>
                  </styled.span>
                </span>
              </styled.span>
            </Cell__Cell>
          </div>
        </Grid__Grid>
      </Grid>
    </div>
  </styled.div>
</KPICard>
`;

exports[`KPICard renders 1`] = `
<KPICard
  backgroundColor="tomato"
  currency="EUR"
  dataFormat="currency"
  greenValue={true}
  growth={0}
  icon={null}
  redValue={false}
  showPercentage={false}
  title="Some title"
  value={42}
>
  <styled.div
    backgroundColor="tomato"
  >
    <div
      className="sc-AxhCb gWgQbJ"
    >
      <Typography
        color="gray"
        fontFamily={null}
        size="normal"
      >
        <styled.div
          fontFamily={null}
          size="normal"
          textColor="gray"
        >
          <div
            className="sc-AxiKw cVwRNp"
            fontFamily={null}
            size="normal"
          >
            Some title
          </div>
        </styled.div>
      </Typography>
      <Grid
        as={null}
        className=""
        columns=""
      >
        <Grid__Grid
          as={null}
          className=""
          columns={2}
        >
          <div
            className="Grid__Grid-gDLjRO jcWKgV"
          >
            <Cell__Cell
              data-cell-test={true}
              middle={true}
            >
              <div
                className="Cell__Cell-tAjrW cZXUpN"
                data-cell-test={true}
              >
                <Typography
                  color="green"
                  fontFamily={null}
                  size="large"
                >
                  <styled.div
                    fontFamily={null}
                    size="large"
                    textColor="green"
                  >
                    <div
                      className="sc-AxiKw gZckwz"
                      fontFamily={null}
                      size="large"
                    >
                      €42.00
                    </div>
                  </styled.div>
                </Typography>
              </div>
            </Cell__Cell>
          </div>
        </Grid__Grid>
      </Grid>
    </div>
  </styled.div>
</KPICard>
`;
